name: DeltaEngineJarBuild
on:
  push:
    branches:
      - main
      - release-v*.*.*

  pull_request:
    branches:
      - main
      - release-v*.*.*
      
permissions:
  id-token: write
  contents: read  
  pull-requests: read
  issues: write

jobs:
  check_branch:
    name: Check Branch
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.check_branch.outputs.is_release }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Check if the branch is a release branch
        id: check_branch
        run: |
          branch_name="${{ github.ref }}"
          if [[ $branch_name =~ ^refs/heads/release-(.+)$ ]]; then
            echo "::set-output name=is_release::true"
          else
            echo "::set-output name=is_release::false"
          fi
      - name: Display is_release
        run: |
          is_release="${{ steps.check_branch.outputs.is_release }}"
          echo " It is a release branch: $is_release"

  extract_version:
    name: extract_version
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release-v') 
    outputs:
      version: ${{ steps.extract_version.outputs.version }}   
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Extract Version
        id: extract_version
        run: |
          branch_name="${{ github.ref }}"
          if [[ $branch_name =~ ^refs/heads/release-(.+)$ ]]; then
            echo "::set-output name=version::${BASH_REMATCH[1]}"
          else
            echo "Invalid branch name format"
            exit 1
          fi
      - name: Display Version
        run: |
          version="${{ steps.extract_version.outputs.version }}"
          echo "Extracted Version: $version"

  AssetBuild:
    name: Asset-Build
    needs:
      - check_branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: running update
        run: sudo apt update
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.7.0
        with:
          checkout-fetch-depth: 0
          java-version: 21
          java-distribution: temurin
          maven-version: 3.9.9
    # This step is for building the Asset jar
      - name: Building asset shipper jar
        run: |
          cd assets-management/services/svc-asset-delta-engine
          mvn clean install -DskipTests=true -Dmaven.javadoc.skip=true

      - name: Upload Asset Shipper artifact 
        uses: actions/upload-artifact@v4
        with:
          name: asset-artifact
          path: assets-management/services/svc-asset-delta-engine/target/asset-sender-1.0-SNAPSHOT.jar

  PushBuildDev:
    name: Push JAR to Dev
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main') && github.event_name == 'push'
    environment: 'SaaSDEV'
    needs:
      - AssetBuild
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS credentials for Dev account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_DEV }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Download Api artifact
      - name: Download API artifact
        uses: actions/download-artifact@v4
        with:
          name: asset-artifact
          path: asset-sender-1.0-SNAPSHOT.jar

      # push api artifact to s3
      - name: copy API jars to S3 
        run: |
          aws s3 cp --recursive asset-sender-1.0-SNAPSHOT.jar s3://${{ secrets.AWS_BUCKET_DEV }}/vlatest/dev/deltaengine
      
  PushBuildQA:
    name: Push JAR to QA
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release-v') && github.event_name == 'push'
    environment: 'SaaSQA'
    needs:
      - AssetBuild
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS credentials for QA account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_QA }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Download Api artifact
      - name: Download API artifact
        uses: actions/download-artifact@v4
        with:
          name: asset-artifact
      
      # push api artifact to s3
      - name: copy API jars to S3 
        run: |
          aws s3 cp --recursive asset-sender-1.0-SNAPSHOT.jar s3://${{ secrets.AWS_BUCKET_QA }}/${{ needs.extract_version.outputs.version }}/qa/deltaengine
